// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: consensus_protocol.proto

package core_rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data      string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GData) Reset() {
	*x = GData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GData) ProtoMessage() {}

func (x *GData) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GData.ProtoReflect.Descriptor instead.
func (*GData) Descriptor() ([]byte, []int) {
	return file_consensus_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *GData) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GProposeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height     int32  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round      int32  `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Data       *GData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	ValidRound int32  `protobuf:"varint,4,opt,name=validRound,proto3" json:"validRound,omitempty"`
	NodeId     int32  `protobuf:"varint,5,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *GProposeMessage) Reset() {
	*x = GProposeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GProposeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GProposeMessage) ProtoMessage() {}

func (x *GProposeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GProposeMessage.ProtoReflect.Descriptor instead.
func (*GProposeMessage) Descriptor() ([]byte, []int) {
	return file_consensus_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *GProposeMessage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GProposeMessage) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *GProposeMessage) GetData() *GData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GProposeMessage) GetValidRound() int32 {
	if x != nil {
		return x.ValidRound
	}
	return 0
}

func (x *GProposeMessage) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type GPreCommitMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height    int32  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round     int32  `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	HashValue []byte `protobuf:"bytes,3,opt,name=hashValue,proto3" json:"hashValue,omitempty"`
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	NodeId    int32  `protobuf:"varint,5,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *GPreCommitMessage) Reset() {
	*x = GPreCommitMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPreCommitMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPreCommitMessage) ProtoMessage() {}

func (x *GPreCommitMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPreCommitMessage.ProtoReflect.Descriptor instead.
func (*GPreCommitMessage) Descriptor() ([]byte, []int) {
	return file_consensus_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *GPreCommitMessage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GPreCommitMessage) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *GPreCommitMessage) GetHashValue() []byte {
	if x != nil {
		return x.HashValue
	}
	return nil
}

func (x *GPreCommitMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *GPreCommitMessage) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type GPreVoteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height    int32  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round     int32  `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	HashValue []byte `protobuf:"bytes,3,opt,name=hashValue,proto3" json:"hashValue,omitempty"`
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	NodeId    int32  `protobuf:"varint,5,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *GPreVoteMessage) Reset() {
	*x = GPreVoteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPreVoteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPreVoteMessage) ProtoMessage() {}

func (x *GPreVoteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPreVoteMessage.ProtoReflect.Descriptor instead.
func (*GPreVoteMessage) Descriptor() ([]byte, []int) {
	return file_consensus_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *GPreVoteMessage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GPreVoteMessage) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *GPreVoteMessage) GetHashValue() []byte {
	if x != nil {
		return x.HashValue
	}
	return nil
}

func (x *GPreVoteMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *GPreVoteMessage) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type GResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error int32  `protobuf:"varint,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GResult) Reset() {
	*x = GResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_consensus_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GResult) ProtoMessage() {}

func (x *GResult) ProtoReflect() protoreflect.Message {
	mi := &file_consensus_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GResult.ProtoReflect.Descriptor instead.
func (*GResult) Descriptor() ([]byte, []int) {
	return file_consensus_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *GResult) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *GResult) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_consensus_protocol_proto protoreflect.FileDescriptor

var file_consensus_protocol_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x72, 0x65,
	0x72, 0x70, 0x63, 0x22, 0x39, 0x0a, 0x05, 0x47, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b,
	0x01, 0x0a, 0x0f, 0x47, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a,
	0x11, 0x47, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0f, 0x47, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x07, 0x47, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0xdd, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x40, 0x0a, 0x10, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x10, 0x4f, 0x6e, 0x50, 0x72, 0x65,
	0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x50, 0x72, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x12, 0x4f, 0x6e, 0x50,
	0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x50, 0x72, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x70, 0x62, 0x66, 0x74, 0x2d, 0x70, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_consensus_protocol_proto_rawDescOnce sync.Once
	file_consensus_protocol_proto_rawDescData = file_consensus_protocol_proto_rawDesc
)

func file_consensus_protocol_proto_rawDescGZIP() []byte {
	file_consensus_protocol_proto_rawDescOnce.Do(func() {
		file_consensus_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_consensus_protocol_proto_rawDescData)
	})
	return file_consensus_protocol_proto_rawDescData
}

var file_consensus_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_consensus_protocol_proto_goTypes = []interface{}{
	(*GData)(nil),             // 0: corerpc.GData
	(*GProposeMessage)(nil),   // 1: corerpc.GProposeMessage
	(*GPreCommitMessage)(nil), // 2: corerpc.GPreCommitMessage
	(*GPreVoteMessage)(nil),   // 3: corerpc.GPreVoteMessage
	(*GResult)(nil),           // 4: corerpc.GResult
}
var file_consensus_protocol_proto_depIdxs = []int32{
	0, // 0: corerpc.GProposeMessage.data:type_name -> corerpc.GData
	1, // 1: corerpc.ConsensusProtocol.OnProposeMessage:input_type -> corerpc.GProposeMessage
	3, // 2: corerpc.ConsensusProtocol.OnPreVoteMessage:input_type -> corerpc.GPreVoteMessage
	2, // 3: corerpc.ConsensusProtocol.OnPreCommitMessage:input_type -> corerpc.GPreCommitMessage
	4, // 4: corerpc.ConsensusProtocol.OnProposeMessage:output_type -> corerpc.GResult
	4, // 5: corerpc.ConsensusProtocol.OnPreVoteMessage:output_type -> corerpc.GResult
	4, // 6: corerpc.ConsensusProtocol.OnPreCommitMessage:output_type -> corerpc.GResult
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_consensus_protocol_proto_init() }
func file_consensus_protocol_proto_init() {
	if File_consensus_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_consensus_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GProposeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPreCommitMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPreVoteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_consensus_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consensus_protocol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_consensus_protocol_proto_goTypes,
		DependencyIndexes: file_consensus_protocol_proto_depIdxs,
		MessageInfos:      file_consensus_protocol_proto_msgTypes,
	}.Build()
	File_consensus_protocol_proto = out.File
	file_consensus_protocol_proto_rawDesc = nil
	file_consensus_protocol_proto_goTypes = nil
	file_consensus_protocol_proto_depIdxs = nil
}
